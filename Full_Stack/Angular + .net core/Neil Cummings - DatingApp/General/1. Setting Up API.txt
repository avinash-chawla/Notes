1. Creating API Project

--> dotnet new webapi -o DatingApp.API -n DatingApp.API -f netcoreapp2.1

--> -o  --> output directory
--> -n  --> name of project (if not specified, take name of parent directory)

-----------------------------------------------------------------------------------------

2. Startup class

services.AddMvc()
app.UseMvc();


--> Add support for mvc routing system
--> By default, app.UseMvc() uses attribute routing

-----------------------------------------------------------------------------------------

3. Models folder

--> Value.cs

    public class Value
    {
        public int ID { get; set; }
        public string Name { get; set; }
    }

-----------------------------------------------------------------------------------------

4. Code-First Migration 

--> Install following packages

EntityFrameworkCore			--> provide base libraries for ORM
EntityFrameworkCore.Tools		--> provide "dotnet ef" tool command
EntityFrameworkCore.Design		--> provide "create/edit/update" dynamically create queries
EntityFrameworkCore.SqlServer		--> provide support to talk with sqlserver db

-----------------------------------------------------------------------------------------

5. DataContext class

    public class DataContext : DbContext
    {
        public DataContext(DbContextOptions<DataContext> options) : base(options){}
        public DbSet<Value> Values { get; set; }
    }

-----------------------------------------------------------------------------------------

6. ConnectionString

  "ConnectionStrings": {
    "DefaultConnection": "server=DESKTOP-FHIOGQS; database=DatingApp; trusted_connection=True"
  }

-----------------------------------------------------------------------------------------

7. Singleton Service of DbContext and also configuring it

            services.AddDbContext<DataContext>(options => options.UseSqlServer(Configuration.GetConnectionString("DefaultConnection")));


-----------------------------------------------------------------------------------------

8. Creating first Migration

--> dotnet ef migrations add "Initial Model"

--> It will create Migration folder inside project

-----------------------------------------------------------------------------------------

9. Updating database with migration

--> It will create Values table inside DatingApp db

-----------------------------------------------------------------------------------------

10. Fill up the data inside db with dummy values

-----------------------------------------------------------------------------------------

11. ValuesController


    [Route("api/[controller]")]
    [ApiController]

    public class ValuesController : ControllerBase
    {
        private readonly DataContext context;

        public ValuesController(DataContext context)
        {
            this.context = context;
        }

        // GET api/values
        [HttpGet]
        public async Task<ActionResult<IEnumerable<Value>>> Get()
        {
            var values = await this.context.Values.ToListAsync();
            return Ok(values);
        }

        // GET api/values/5
        [HttpGet("{id}")]
        public async Task<ActionResult<Value>> Get(int id)
        {
            var value = this.context.Values.FirstOrDefaultAsync(x => x.ID == id);
            return Ok(value);
        }
    }


--> Above are asynchronous action method with status code return along with data

-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------


v
















































