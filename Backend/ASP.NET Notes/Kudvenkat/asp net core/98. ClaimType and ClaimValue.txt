-----------------------------------------------------------------------------------------

1. Authorization Policy

--> Consider the following Authorization policy. 
--> To satisfy this policy the loggedin user must have Edit Role claim. 
--> At the moment we are not checking for any value.

services.AddAuthorization(options =>
{
    options.AddPolicy("EditRolePolicy",
        policy => policy.RequireClaim("Edit Role"));
});

-----------------------------------------------------------------------------------------

2. Double Check Claim

--> Most claims come with a value. 
--> To satisfy this policy the loggedin user must have Edit Role claim with a value of true.

-----------------------------------------------------------------------------------------

services.AddAuthorization(options =>
{
    options.AddPolicy("EditRolePolicy",
        policy => policy.RequireClaim("Edit Role", "true"));
});

-----------------------------------------------------------------------------------------

--> A list of allowed values can also be specified. 
--> To satisfy the following policy the loggedin user must have Country claim with a value of USA, India, or UK

services.AddAuthorization(options =>
{
    options.AddPolicy("AllowedCountryPolicy",
        policy => policy.RequireClaim("Country", "USA", "India", "UK"));
});

--> Second parameter is params String[] claimValue

-----------------------------------------------------------------------------------------

--> ClaimType comparison is case in-sensitive where as ClaimValue comparison is case sensitive.

-----------------------------------------------------------------------------------------

3. AspNetUserClaims Table

--> We are storing all claims key-value pairs in this table
--> We are storing same name and value for claimName and claimValue
--> We can put values for claimName and check for that also
--> eg. true

-----------------------------------------------------------------------------------------

4. Changing ClaimValue from name to boolean

--> In ManageUserClaims actionMethod PostRequest,

result = await userManager.AddClaimsAsync(user, model.Cliams.Select(c => new Claim(c.ClaimType, c.IsSelected ? "true" : "false" )));

-----------------------------------------------------------------------------------------

5. Changing View for EditUser Get Request

--> Showing both ClaimName and ClaimType
--> In EditUser action method (GET),

var model = new EditUserViewModel
{
	...
	Claims = userClaims.Select(c => c.Type + " : " + c.Value).ToList(),
	...
}

-----------------------------------------------------------------------------------------

6. In ManageUserClaims actionMethod

--> In GET request,
--> We are now checking claimType for isSelected field

if(existingUserClaims.Any(c => c.Type == claim.Type && c => c.Value == "true"))
{
   userClaim.IsSelected = true;
}

-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------





























































