--> Code shown here is only for information, not applying in real project.

1. EmployeeCreateViewModel Class

--> Adding List<IFormFile>  instead of single IFormFile

public class EmployeeCreateViewModel
{
    public string Name { get; set; }
    public string Email { get; set; }
    public Dept? Department { get; set; }
    public List<IFormFile> Photos { get; set; }
}

----------------------------------------------------------------------------

2. Create View Code

--> inserting multiple keyword in input tag.

<input asp-for="Photos" multiple class="form-control custom-file-input">

----------------------------------------------------------------------------

3. Create Action Method

--> Modelbinding provides multiple files from element
--> We have to do foreach loop to iterate over images and saving in wwwroot folder.

public IActionResult Create(EmployeeCreateViewModel model)
        {
            if (ModelState.IsValid)
            {
                string uniqueFileName = null;

                // If the Photos property on the incoming model object is not null and if count > 0,
                // then the user has selected at least one file to upload

                if (model.Photos != null && model.Photos.Count > 0)
                {
                    // Loop thru each selected file
                    foreach (IFormFile photo in model.Photos)
                    {
                        // The file must be uploaded to the images folder in wwwroot
                        // To get the path of the wwwroot folder we are using the injected
                        // IHostingEnvironment service provided by ASP.NET Core

                        string uploadsFolder = Path.Combine(hostingEnvironment.WebRootPath, "images");

                        // To make sure the file name is unique we are appending a new
                        // GUID value and and an underscore to the file name

                        uniqueFileName = Guid.NewGuid().ToString() + "_" + photo.FileName;
                        string filePath = Path.Combine(uploadsFolder, uniqueFileName);

                        // Use CopyTo() method provided by IFormFile interface to
                        // copy the file to wwwroot/images folder

                        photo.CopyTo(new FileStream(filePath, FileMode.Create));
                    }
                }
	....
}

----------------------------------------------------------------------------

4. Note

--> We are saving multiple images in static folder
--> But while displaying on view, one image file is retrieved.
--> Because PhotoPath of only image is saved in database
--> Now there is one-to-one relationship between employee model and Photo property
--> You can create another table, having columns like empId and empImages, where you can save multiple imaegs and connect these two tables.

----------------------------------------------------------------------------

