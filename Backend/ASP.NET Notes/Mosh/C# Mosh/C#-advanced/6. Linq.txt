1. What is LINQ?

--> It stands for Language Integrated Query
--> Gives you the capability to query objects

-------------------------------------------------------------------------------------------

2. You can query

1. Objects in memory eg. collection (LINQ to Objects)
2. Databases (Linq to Entities)
3. XML (linq to xml)
4. Ado.net data sets (linq to data sets)

-------------------------------------------------------------------------------------------

3. Book.cs

public class Book 
{
   public string Title { get; set; }
   public float Price { get; set; }
}

-------------------------------------------------------------------------------------------

4. BookRepository

public class BookRepository
{
   public IEnumerable<Book> GetBooks()
   {
	return List<Book> {
	    new Book { Title = "title1", Price = 1 },
	    new Book { Title = "title2", Price = 2 },
	    new Book { Title = "title3", Price = 3 },
	    new Book { Title = "title4", Price = 4 },
	    new Book { Title = "title5", Price = 5 }
	}
   }
}

-------------------------------------------------------------------------------------------

5. Main method

var books = new BookRepository().GetBooks();

var cheapBooks = new List<Book>();
foreach(let book in books)
{
   if(book.Price < 10)
	cheapBooks.Add(book)
}

foreach(let book in cheapBooks)
   cw(book.Title + "" + book.Price)
}

-------------------------------------------------------------------------------------------

6. Using Linq Extension Methods

var books = new BookRepository().GetBooks();
var cheapBooks = books.Where(b => b.Price < 10);

var cheapBooks = books.Where(b => b.Price < 10).OrderBy(x => x.Price);

var cheapBooks = books.Where(b => b.Price < 10).OrderBy(x => x.Price).Select(b => b.Title);
--> Return type will be List<int>

-------------------------------------------------------------------------------------------

7. Ling Query Operators

var cheaperBooks = from b in books;

--> It will return List<Book>

-------------------------------------------------------------------------------------------

var cheaperBooks = 
	from b in books
	where b.Price < 10
	orderby b.Title
	select b

--> It will return List<Book>

var cheaperBooks = 
	from b in books
	where b.Price < 10
	orderby b.Title
	select b.Title

--> It will return List<int>

-------------------------------------------------------------------------------------------

8. Other useful methods of Linq

var book = books.FirstOrDefault(b => b.Title == "title1");
var book = books.LastOrDefault(b => b.Title == "title1");
var book = books.SingleOrDefault(b => b.Title == "title1");

var book = books.Skip(2).Take(3);

-------------------------------------------------------------------------------------------

9. Aggregate functions

var count = books.Count()
var maxPrice = books.Max(x => x.Price)
var minPrice = books.Min(x => x.Price)

var totalPrice = books.Sum(x => x.Price)

-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------






























































