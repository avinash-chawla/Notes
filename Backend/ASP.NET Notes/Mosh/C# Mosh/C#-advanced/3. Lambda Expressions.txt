1. What is a Lambda Expression

--> An anonymous method

1. No access modifier
2. No name
3. No return statement

----------------------------------------------------------------------------------------

2. Why do we use them?

--> For convenience

--> Syntax:

args => expression

number => number*number

----------------------------------------------------------------------------------------

3. Example:

--> Without Lambda Expression

static void Main(string[] args)
{
   CW(Square(5));
}

static int Square(int number)
{
   return number*number;
}

----------------------------------------------------------------------------------------

--> With Lambda Expression

static void Main(string[] args)
{
   CW(num => num * num);
}

----------------------------------------------------------------------------------------

4. Example2:

public class BookRepository
{
   public List<Book> GetBooks()
   {
	return new List<Book>
	{
	    new Book() { Title = "Title1", Price = 5},
	    new Book() { Title = "Title2", Price = 7},
	    new Book() { Title = "Title3", Price = 12}
	}
   }
}

----------------------------------------------------------------------------------------

static void Main(string[] args)
{
   var books = new BookRepository().GetBooks();

   var cheapBooks = books.FindAll(IsCheaperThen10Dollars);

   foreach(var book in cheapBooks)
   {
	CW(book.Title);
   }
}

static bool IsCheaperThen10Dollars(Book book)
{ 
	return book.Price < 10;
}

----------------------------------------------------------------------------------------

var cheapBooks = books.FindAll(book => book.Price < 10);

----------------------------------------------------------------------------------------

--> FindAll is linq extensions method which is applied to collections object
--> System.Generic.Collections;

--> It accepts a predicate of type Book

--> A Predicate is a built-in delegate which points to a method which accepts Book object and return boolean specifying whether the given condition was satisfied.

static bool IsCheaperThen10Dollars(Book book)
{ 
	return book.Price < 10;
}

----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------























































