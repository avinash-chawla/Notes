----------------------------------------------------------------------------------------

1. What is Asp.net core?

--> The ASP.NET Core platform is the foundation on which web applications are built and provides features for processing HTTP requests.
--> The ASP.NET Core platform takes care of the low-level details of web applications so that developers can focus on features for the end user.
--> The key building blocks are services and middleware components, both of which can be created in the Startup class.

----------------------------------------------------------------------------------------

2. What are services?

--> Services are objects that provide features in a web application. 
--> They are managed by ASP.NET Core feature called dependency injection
--> Middleware components use only the services they require to do their work.

----------------------------------------------------------------------------------------

3. What are middleware components?

--> The purpose of the ASP.NET Core platform is to receive HTTP requests and send responses
--> They are arranged in chain called request pipeline.

----------------------------------------------------------------------------------------

4. Entry Point

--> First, Project.cs class, Main method calls by .net runtime.
--> It calls CreateHostBuilder method

--> Responsible for:
1. including creating services
2. sets up the HTTP server, named Kestrel

--> The Result is passed to the ConfigureWebHostDefaults which selects Startup class (it has two methods)

--> The ConfigureServices method is used to define the services that the application requires
--> The Configure method is used to register the middleware components for the request pipeline.

--> Three middleware components are added to the pipeline by default when a project is created using the Empty template. 
--> UseDeveloperExceptionPage, UseRouting, UseEndpoints

----------------------------------------------------------------------------------------

5. Creating Custom Middleware

	app.Use(async (context, next) => {
                if (context.Request.Method == HttpMethods.Get
                        && context.Request.Query["custom"] == "true") {
                    await context.Response.WriteAsync("Custom Middleware \n");
                }
                await next();
            });

--> context is HttpContext object, use to handle http requests and responses.

----------------------------------------------------------------------------------------

6. Properties of HttpContext object

1. Connection
2. Request
3. RequestService	- This property provides access to the services available for the request
4. Response
5. Session
6. User
7. Features

----------------------------------------------------------------------------------------

7. Properties of HttpRequest object (which is a property of HttpContext object)

1. Body
2. ContentLength
3. ContentType
4. Cookies
5. Form
6. Headers
7. IsHttps
8. Method
9. Path
10. Query

----------------------------------------------------------------------------------------

8. Properties of HttpResponse object

1. ContentLength
2. ContentType
3. Cookies
4. HasStarted
5. Headers
6. StatusCode
7. WriteAsync(data)
8. Redirect(url)

----------------------------------------------------------------------------------------

9. Defining Middleware Using a Class

namespace Platform {

    public class QueryStringMiddleWare {

        private RequestDelegate next;

        public QueryStringMiddleWare(RequestDelegate nextDelegate) {
            next = nextDelegate;
        }

        public async Task Invoke(HttpContext context) {
            if (context.Request.Method == HttpMethods.Get
                        && context.Request.Query["custom"] == "true") {
                await context.Response.WriteAsync("Class-based Middleware \n");
            }
            await next(context);
        }
    } 
}

----------------------------------------------------------------------------------------

10. Configuring Middleware

--> We use options pattern
--> The class which we want to configure is wrapped around options class and it is used to change value at runtime

----------------------------------------------------------------------------------------

namespace Platform {

    public class MessageOptions {

        public string CityName { get; set; } = "New York";
        public string CountryName{ get; set; } = "USA";
    } 
}

----------------------------------------------------------------------------------------

namespace Platform {

    public class Startup {

        public void ConfigureServices(IServiceCollection services) {

            services.Configure<MessageOptions>(options => {
                options.CityName= "Albany";
            });
        }

        public void Configure(IApplicationBuilder app, IWebHostEnvironment env, IOptions<MessageOptions> msgOptions) {
            
	    app.Use(async (context, next) => {

                if (context.Request.Path == "/location") {
                    MessageOptions opts = msgOptions.Value;
                    await context.Response.WriteAsync($"{opts.CityName}, {opts.CountryName}");
                } else {
                    await next();
                }
            });
    }
}

----------------------------------------------------------------------------------------

--> The options are set up using IServiceCollection.Configure in the ConfigureServices method. 
--> The generic type parameter is used to specify the options class

--> This statement creates options object using the MessageOptions class and changes the value of the CityName property. 
--> When the application starts, the ASP.NET Core platform will create a new instance of the options class and pass it to the function supplied as the argument to the Configure method, allowing the default option values to be changed.

----------------------------------------------------------------------------------------

11. Using the Options Pattern with Class-Based Middleware

namespace Platform {
    public class LocationMiddleware {

        private RequestDelegate next;
        private MessageOptions options;

        public LocationMiddleware(RequestDelegate nextDelegate, IOptions<MessageOptions> opts) {
            next = nextDelegate;
            options = opts.Value;
        }

        public async Task Invoke(HttpContext context) {
            if (context.Request.Path == "/location") {
                await context.Response
                    .WriteAsync($"{options.CityName}, {options.CountryName}");
            } else {
                await next(context);
            }
        }
    } 
}

----------------------------------------------------------------------------------------

--> Startup.cs

public void Configure(IApplicationBuilder app, IWebHostEnvironment env) {            
	app.UseMiddleware<LocationMiddleware>();

----------------------------------------------------------------------------------------

12. What is URL Routing?

--> URL routing consolidates the processing and matching of URLs, allowing components known as endpoints to generate responses.

--> Each middleware component decides whether to act on a request as it passes along the pipeline. 
--> Some components are looking for a specific header or query string value, but most components—especially terminal and short-circuiting components—are trying to match URLs.

--> The routing middleware is added using two separate methods: UseRouting and UseEndpoints. 

--> The UseRouting method adds the middleware responsible for processing requests to the pipeline. 
--> The UseEndpoints method is used to define the routes that match URLs to endpoints. 

----------------------------------------------------------------------------------------

            app.UseRouting();

            app.UseEndpoints(endpoints => {
                endpoints.MapGet("routing", async context => {
                    await context.Response.WriteAsync("Request Was Routed");
                });
            });

----------------------------------------------------------------------------------------

--> Endpoints generate responses in the same way as the middleware components
--> Endpoints are only specific type of middlewares to match route only and then react.

----------------------------------------------------------------------------------------

--> Earlier:

	    app.UseMiddleware<Population>();
            app.UseMiddleware<Capital>();

--> Population and Capital are custom middleware classes.
--> Such classes receives Request Delegate object in constructor and HttpContext object in Invoke method

----------------------------------------------------------------------------------------

--> Endpoint Middlewares:

     	    app.UseEndpoints(endpoints => {
                endpoints.MapGet("routing", async context => {
                    await context.Response.WriteAsync("Request Was Routed");
                });
                endpoints.MapGet("capital/uk", new Capital().Invoke);
                endpoints.MapGet("population/paris", new Population().Invoke);
            });

----------------------------------------------------------------------------------------

13. Using Segment Variables in URL Patterns

--> http://localhost:5000/apples/oranges/cherries

            app.UseEndpoints(endpoints => {
                endpoints.MapGet("{first}/{second}/{third}", async context => {

                    await context.Response.WriteAsync("Request Was Routed\n");

                    foreach (var kvp in context.Request.RouteValues) {
                        await context.Response.WriteAsync($"{kvp.Key}: {kvp.Value}\n");
                    }
                });

--> The URL pattern {first}/{second}/{third} matches URLs whose path contains three segments, regardless of what those segments contain.
--> This content is available through the HttpRequest.RouteValues property, which returns a RouteValuesDictionary object

----------------------------------------------------------------------------------------

--> Useful RouteValuesDictionary Members

[key]		
Keys		
Values		
Count		
ContainsKey(key)

----------------------------------------------------------------------------------------

--> Output:

http://localhost:5000/apples/oranges/cherries

first: apples
second: oranges
third: cherries

----------------------------------------------------------------------------------------

14. Refactoring Endpoints middlewares

--> Earlier:

endpoints.MapGet("capital/uk", new Capital().Invoke);

--> Capital.cs

public async Task Invoke(HttpContext context) {
            string[] parts = context.Request.Path.ToString().Split("/", StringSplitOptions.RemoveEmptyEntries);
	    if (parts.Length == 2 && parts[0] == "capital") {..}

--> We are enumerating all the segment variables.

----------------------------------------------------------------------------------------

--> Now:

    public static class Capital {
        public static async Task Endpoint(HttpContext context) {

            string capital = null;
            string country = context.Request.RouteValues["country"] as string;

--> I also removed the constructors and replaced the Invoke instance method with a static method named Endpoint

    endpoints.MapGet("capital/{country}", Capital.Endpoint);
    endpoints.MapGet("population/{city}", Population.Endpoint);

--> Segment variables are not static, they change (eg. id)
--> Literal variables are static, which do not change (eg. admin)

----------------------------------------------------------------------------------------

15. Using Default Values for Segment Variables

--> endpoints.MapGet("employee/details/{id=1}", Employee.Endpoint);

/employee/details   -	Matches

----------------------------------------------------------------------------------------

16. Using Optional Segments in a URL Pattern

--> This is alternative to Default Values

public static async Task Endpoint(HttpContext context) {
            string city = context.Request.RouteValues["city"] as string ?? "london";	

endpoints.MapGet("size/{city?}", Population.Endpoint)
        
----------------------------------------------------------------------------------------

17. Using a catchall Segment Variable

    endpoints.MapGet("{first}/{second}/{*catchall}", async context => {		// This Line

        await context.Response.WriteAsync("Request Was Routed\n");
        foreach (var kvp in context.Request.RouteValues) {
            await context.Response.WriteAsync($"{kvp.Key}: {kvp.Value}\n");
        }
    });

-->  http://localhost:5000/one/two/three/four

--> Output:

Request Was Routed
first: one
second: two
catchal: three/four

----------------------------------------------------------------------------------------

18. Constraining Segment Matching

endpoints.MapGet("{first:int}/{second:bool}", async context => {..}
endpoints.MapGet("capital/{country:regex(^uk|france|monaco$)}",

----------------------------------------------------------------------------------------

19. Defining Fallback Routes

--> Fallback routes direct a request to an endpoint only when no other route matches a request

    endpoints.MapFallback(async context => {
        await context.Response.WriteAsync("Routed to fallback endpoint");
    }); 

----------------------------------------------------------------------------------------

20. Creating Custom Constraints

namespace Platform {

    public class CountryRouteConstraint: IRouteConstraint {

        private static string[] countries = { "uk", "france", "monaco" };

        public bool Match(HttpContext httpContext, IRouter route, string routeKey, RouteValueDictionary values, RouteDirection routeDirection) {
            string segmentValue = values[routeKey] as string ?? "";
            return Array.IndexOf(countries, segmentValue.ToLower()) > -1;
        }
    } 
}

----------------------------------------------------------------------------------------

            services.Configure<RouteOptions>(opts => {
               opts.ConstraintMap.Add("countryName",
                   typeof(CountryRouteConstraint));
            });

----------------------------------------------------------------------------------------

endpoints.MapGet("capital/{country:countryName}", Capital.Endpoint);

----------------------------------------------------------------------------------------

21. Accessing the Endpoint in a Middleware Component

--> Any middleware component that is added to the request pipeline between the UseRouting method and the UseEndpoints method can see which endpoint has been selected before the response is generated and alter its behavior accordingly.

app.UseRouting();

            app.Use(async (context, next) => {
                Endpoint end = context.GetEndpoint();
                if (end != null) {
                    await context.Response.WriteAsync($"{end.DisplayName} Selected \n");
                } else {
                    await context.Response.WriteAsync("No Endpoint Selected \n");
                }
                await next();
            });

            app.UseEndpoints(endpoints => {...}

--> The GetEndpoint extension method on the HttpContext class returns the endpoint object
--> This object has properties like DisplayName, MetaData, etc.

----------------------------------------------------------------------------------------

22. What is Dependency Injection?

--> Services are objects that are shared between middleware components and endpoints. 
--> Eg. DbContext object shared across application and any class can have access to it.

--> Dependency Injection is used to create and consume services.
--> Benefit: 

1. Creates loosely coupled structure.
2. Create Different Implementation

----------------------------------------------------------------------------------------

23. Using a Service in Static class

--> The situation is more complicated in the WeatherEndpoint class, which is static and doesn’t have a constructor through which dependencies can be declared. 
--> Services can be accessed through the HttpContext object. (RequestServices property)

using Microsoft.Extensions.DependencyInjection;
namespace Platform {

    public class WeatherEndpoint {

        public static async Task Endpoint(HttpContext context) {

            IResponseFormatter formatter = context.RequestServices.GetRequiredService<IResponseFormatter>();
            await formatter.Format(context, "Endpoint Class: It is cloudy in Milan");
        }
    } 
}

--> The HttpContext.RequestServices property returns an object that implements the IServiceProvider interfaces, which provides access to the services
--> The Microsoft. Extensions.DependencyInjection namespace contains extension methods for the IServiceProvider interface that allow individual services to be obtained

----------------------------------------------------------------------------------------

24. Using a Service in Static Class - Part 2

--> Services can also be accessed through the IEndpointRouteBuilder object using the Adapter function

IResponseFormatter formatter = app.ServiceProvider.GetService<IResponseFormatter>();

----------------------------------------------------------------------------------------

25. Using Service Lifecycles

1. AddSingleton<T, U>()  
2. AddTransient<T, U>()
3. AddScoped<T, U>()

----------------------------------------------------------------------------------------

26. Dependency Chains

--> One class having dependencies on another class and another class has dependencies on third class.

----------------------------------------------------------------------------------------

27. Creating Services with Multiple Implementations

            services.AddScoped<IResponseFormatter, TextResponseFormatter>();
            services.AddScoped<IResponseFormatter, HtmlResponseFormatter>();
            services.AddScoped<IResponseFormatter, GuidService>();

--> If not done anything special, then GuidService will be used as default implementation.

----------------------------------------------------------------------------------------

    public interface IResponseFormatter {

        Task Format(HttpContext context, string content);
        public bool RichOutput => false;				// This Line
    } 

----------------------------------------------------------------------------------------

    public class HtmlResponseFormatter : IResponseFormatter {

        public async Task Format(HttpContext context, string content) {...}
        public bool RichOutput => true;				// This Line
    } 
}

----------------------------------------------------------------------------------------

                endpoints.MapGet("/", async context => {
                    IResponseFormatter formatter = context.RequestServices.GetServices<IResponseFormatter>().First(f => f.RichOutput);
                    await formatter.Format(context, "Multiple services");
                });

----------------------------------------------------------------------------------------

28. Using Unbound Types in Services

--> Services can be defined with generic type parameters that are bound to specific types when the service is requested

services.AddSingleton(typeof(ICollection<>), typeof(List<>));

endpoints.MapGet("/string", async context => {
                    ICollection<string> collection = context.RequestServices.GetService<ICollection<string>>();	

----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------



































